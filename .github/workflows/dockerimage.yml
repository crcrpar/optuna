name: Build Docker Image

on:
  push:
    branches:
      - master
  release:
    types: [published]
  pull_request:
    branches:
      - master

env:
  DOCKER_BASE_NAME: docker.pkg.github.com/${{ github.repository }}/optuna
  # TODO: (crcrpar): Update below before uncommnet.
  # DOCKER_HUB_BASE_NAME: crcrpar/gh-actions-optuna

jobs:

  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python_version: ['3.5', '3.6', '3.7', '3.8']

    steps:
    - uses: actions/checkout@v1

    - name: Set ENV
      run: |
        if [ "${{ github.event_name }}" = 'release' ]; then
            export TAG_NAME="py${{ matrix.python_version }}-${{ github.event.release.tag_name }}"
        else
            export TAG_NAME="py${{ matrix.python_version }}"
        fi
        echo "::set-env name=PKG_TAG::${DOCKER_BASE_NAME}:${TAG_NAME}"
        echo "::set-env name=HUB_TAG::${DOCKER_HUB_BASE_NAME}:${TAG_NAME}"

    - name: Build the Docker image
      run: |
        docker build . --build-arg PYTHON_VERSION=${{ matrix.python_version }} --file Dockerfile --tag "${PKG_TAG}"
        docker tag "${PKG_TAG}" "${HUB_TAG}"

    - name: Login & Push to GitHub Packages
      if: github.event_name != 'pull_request'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "${GITHUB_TOKEN}" | docker login docker.pkg.github.com -u crcrpar --password-stdin
        docker push "${PKG_TAG}"

    - name: Login & Push to Docker Hub
      if: github.event_name != 'pull_request'
      env:
        DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
      run: |
        echo "${DOCKER_HUB_TOKEN}" | docker login -u crcrpar --password-stdin
        docker push "${HUB_TAG}"
